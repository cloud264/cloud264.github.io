"use strict";(()=>{var n=class{constructor(t,e){this.x=t,this.y=e}getX(){return this.x}getY(){return this.y}};var s=class{static{this.GRID_SIZE_X=80}static{this.GRID_SIZE_Y=45}};var d=class{constructor(t){this.game=t,this.canvas=t.getCanvas(),this.ctx=this.canvas.getContext("2d")}render(){this.drawBackground()}drawBackground(){this.ctx.lineWidth=2,this.ctx.strokeStyle="#121212",this.ctx.fillStyle="#8dcdff",this.ctx.fillRect(0,0,this.canvas.width,this.canvas.height)}};var o=class{constructor(t,e){this.distanceFromStart=1/0;this.visited=!1;this.x=t,this.y=e}getX(){return this.x}getY(){return this.y}setDistance(t){this.distanceFromStart=t}getDistance(){return this.distanceFromStart}setVisited(t){this.visited=t}isVisited(){return this.visited}};var h=class{constructor(t){this.game=t,this.ctx=this.game.getCanvas().getContext("2d"),this.nodes=[],this.visitedNodes=new Set,this.setupNodes(),this.startNode=this.nodes[15][15],this.startNode.setVisited(!0),this.currentNode=this.nodes[15][15],this.targetNode=this.nodes[45][20]}setupNodes(){for(let t=0;t<s.GRID_SIZE_X;t++){this.nodes[t]=[];for(let e=0;e<s.GRID_SIZE_Y;e++)this.nodes[t][e]=new o(t,e)}}getNeighbors(t){let e=new Set,i=t.getX(),r=t.getY();return i+1<s.GRID_SIZE_X&&e.add(this.nodes[i+1][r]),i-1>=0&&e.add(this.nodes[i-1][r]),r-1>=0&&e.add(this.nodes[i][r-1]),r+1<s.GRID_SIZE_Y&&e.add(this.nodes[i][r+1]),e}getDistanceFromStart(t){let e=Math.max(this.startNode.getX(),t.getX()),i=Math.max(this.startNode.getY(),t.getY()),r=Math.min(this.startNode.getX(),t.getX()),c=Math.min(this.startNode.getY(),t.getY());return e-r+i-c}getNodeWithShortestDistanceToStart(){let t=null;for(let e=0;e<s.GRID_SIZE_X;e++)for(let i=0;i<s.GRID_SIZE_Y;i++){let r=this.nodes[e][i];r.isVisited()||(t===null&&(t=r),!r.isVisited()&&r.getDistance()<t.getDistance()&&(t=r))}return t}findPath(){if(this.targetNode.getDistance()<1/0)return;this.currentNode.setVisited(!0),this.visitedNodes.add(this.currentNode);let t=this.getNeighbors(this.currentNode);for(let i of t){var e=this.getDistanceFromStart(this.currentNode)+1;e<i.getDistance()&&i.setDistance(e)}this.currentNode=this.getNodeWithShortestDistanceToStart()}drawNode(t){this.ctx.fillRect(t.getX()*this.game.getCanvas().width/s.GRID_SIZE_X,t.getY()*this.game.getCanvas().height/s.GRID_SIZE_Y,this.game.getCanvas().width/s.GRID_SIZE_X,this.game.getCanvas().height/s.GRID_SIZE_Y)}getColor(t){let e=[[0,180,0],[255,0,0],[0,0,0]],i=this.lerp(e,t.getDistance()/(s.GRID_SIZE_X+s.GRID_SIZE_Y));return`rgb(${i[0]}, ${i[1]}, ${i[2]})`}lerp(t,e){return[t[0][0]+(t[1][0]-t[0][0])*e,t[0][1]+(t[1][1]-t[0][1])*e,t[0][2]+(t[1][2]-t[0][2])*e]}renderPath(){for(let t of this.visitedNodes)this.ctx.fillStyle=this.getColor(t),this.drawNode(t);this.ctx.fillStyle="red",this.drawNode(this.startNode),this.ctx.fillStyle="green",this.drawNode(this.targetNode)}};var p=class{constructor(t){this.tick=t=>{this.deltaTime=(t-this.timestampOld)/1e3,this.timestampOld=t,this.pathfinder!==void 0&&this.pathfinder.findPath(),this.gameRenderer.render(),this.pathfinder!==void 0&&this.pathfinder.renderPath(),window.requestAnimationFrame(this.tick)};this.canvas=t,this.grid=[],this.deltaTime=0,this.timestampOld=0,this.pathfinder=new h(this),this.gameRenderer=new d(this),this.setupGrid()}restart(){this.deltaTime=0,this.timestampOld=0}setupGrid(){for(let t=0;t<s.GRID_SIZE_X;t++){this.grid[t]=[];for(let e=0;e<s.GRID_SIZE_Y;e++)this.grid[t][e]=new n(t,e)}}getCanvas(){return this.canvas}getGrid(){return this.grid}getTimeDelta(){return this.deltaTime}renderer(){return this.gameRenderer}};var m;function u(){let a=document.getElementById("dijkstra-canvas");m=new p(a),window.requestAnimationFrame(m.tick)}window.onload=u;})();
